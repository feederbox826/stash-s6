name: docker-build
on:
  workflow_call:
    inputs:
      variant:
        required: true
        type: string
      upstream:
        required: true
        type: string
      tags:
        required: true
        type: string # comma-separated tags
      buildargs:
        required: false
        type: string
        default: ""
      DOCKERHUB_USERNAME:
        required: true
        type: string
    secrets:
      DOCKERHUB_PASSWORD:
        required: true
      GH_TOKEN:
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Get Git commit timestamp
        run: echo "TIMESTAMP=$(git log -1 --pretty=%ct)" >> $GITHUB_ENV
      - uses: docker/setup-qemu-action@v3
        with:
          platforms: arm,arm64
      - uses: docker/setup-buildx-action@v3
        with:
          buildkitd-config-inline: |
            [registry."docker.io"]
              mirrors = ["mirror.gcr.io"]

      - name: Generate platforms
        run: | 
          # Set platforms depending on variant
          if [[ "${{ inputs.variant }}" == "alpine" ]]; then
            echo "PLATFORMS=linux/amd64,linux/arm64,linux/arm/v6,linux/arm/v7" >> $GITHUB_ENV
          else
            echo "PLATFORMS=linux/amd64,linux/arm64" >> $GITHUB_ENV
          fi

      - id: generate-tags
        name: Generate tags with date suffix
        run: |
          # Split input tags by comma, trim whitespace
          IFS=',' read -ra TAGS <<< "${{ inputs.tags }}"
          # Get date YYYY-MM-DD from timestamp
          DATE=$(date -d @"${{ env.TIMESTAMP }}" +%F)
          ALL_TAGS=()
          # edge cases for "alpine"
          if [[ "${{ inputs.variant }}" == "alpine" ]]; then
            # latest
            if [[ "${{ inputs.upstream }}" == "latest" ]]; then
              ALL_TAGS+=("latest")
            fi
            # develop
            if [[ "${{ inputs.upstream }}" == "development" ]]; then
              ALL_TAGS+=("develop")
            fi
          fi
          for tag in "${TAGS[@]}"; do
            tag="$(echo $tag | xargs)" # trim spaces
            ALL_TAGS+=("$tag")
            ALL_TAGS+=("$tag-$DATE")
          done
          # Join tags with newline (\n)
          {
            echo 'tags<<EOF'
            printf '%s\n' "${ALL_TAGS[@]}"
            echo 'EOF'
          } >> $GITHUB_OUTPUT

      - uses: docker/metadata-action@v5
        id: meta
        with:
          images: |
            ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}
            docker.io/${{ inputs.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}
          tags: ${{ steps.generate-tags.outputs.tags }}

      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GH_TOKEN }}
      - uses: docker/login-action@v3
        with:
          username: ${{ inputs.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push multi-arch image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          file: dockerfile/${{ inputs.variant }}.Dockerfile
          push: true
          sbom: true
          provenance: mode=max
          platforms: ${{ env.PLATFORMS }}
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha,scope=${{ inputs.variant }}
          cache-to: type=gha,mode=max,scope=${{ inputs.variant }}
          build-args: |
            STASH_TAG=${{ inputs.upstream }}
            BUILD_DATE=${{ env.TIMESTAMP }}
            ${{ inputs.buildargs }}
        env:
          SOURCE_DATE_EPOCH: ${{ env.TIMESTAMP }}